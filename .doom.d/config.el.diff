--- .emacs.d/static/config.example.el
+++ .doom.d/config.el
@@ -6,8 +6,8 @@
 
 ;; Some functionality uses this to identify you, e.g. GPG configuration, email
 ;; clients, file templates and snippets. It is optional.
-;; (setq user-full-name "John Doe"
-;;       user-mail-address "john@doe.com")
+(setq user-full-name (getenv "USERFULLNAME")
+      user-mail-address (getenv "EMAIL"))
 
 ;; Doom exposes five (optional) variables for controlling fonts in Doom:
 ;;
@@ -15,7 +15,7 @@
 ;; - `doom-variable-pitch-font' -- a non-monospace font (where applicable)
 ;; - `doom-big-font' -- used for `doom-big-font-mode'; use this for
 ;;   presentations or streaming.
-;; - `doom-symbol-font' -- for symbols
+;; - `doom-unicode-font' -- for unicode glyphs
 ;; - `doom-serif-font' -- for the `fixed-pitch-serif' face
 ;;
 ;; See 'C-h v doom-font' for documentation and more examples of what they
@@ -74,3 +74,22 @@
 ;;
 ;; You can also try 'gd' (or 'C-c c d') to jump to their definition and see how
 ;; they are implemented.
+
+(after! package
+  (add-to-list 'package-archives '("user42" . "https://download.tuxfamily.org/user42/elpa/packages/"))
+  (advice-add #'epg-import-keys-from-file
+              :before (lambda (&rest _)
+                        "Fetch gpg keys."
+                        (cond
+                         ((zerop (call-process-shell-command (mapconcat #'shell-quote-argument '("type" "gpg") " ")))
+                          (let ((keyid "F8D0B4E7D2D21191"))
+                            (unless (string-match-p
+                                     (concat "/" keyid " ")
+                                     (shell-command-to-string
+                                      (mapconcat #'shell-quote-argument `("gpg" "--homedir" ,package-gnupghome-dir "--list-keys" "--keyid-format=long") " ")))
+                              (process-lines "gpg" "--homedir" package-gnupghome-dir "--keyserver" "pgp.mit.edu" "--receive-keys" keyid))))
+                         (t (error "Cannot save gpg keys")))))
+  )
+
+(setq init-loader-show-log-after-init 'error-only)
+(init-loader-load (expand-file-name "inits" doom-user-dir))
