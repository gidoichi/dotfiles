#!/bin/sh
# -*- mode:shell-script -*-


######################################################################
# Initial Configuration
######################################################################

set -eu

print_usage_and_exit () {
    cat <<-USAGE 1>&2
	標準入力からデータがファイルとして開けるようになった \$EDITOR
	「-」を指定すれば標準入力から読み込む。

	Usage   : ${0##*/} [<options>] [<files>] [<\$EDITOR specified options>]
	Options : -e <extension> ... 標準入力のデータに対するシンタックスハイライト用拡張子
	          -f <filename> .... エディタで指定したいファイル名。<files>として「-」を指定したときのみ有効
	          -o ............... 編集結果を標準出力に出力する
	USAGE
    exit 1
}

exit_trap() {
    set -- ${1:-} $?  # $? is set as $1 if no argument given
    trap '' EXIT HUP INT QUIT PIPE ALRM TERM
    [ -e "${Tmp:-}" ] && rm -rf "$Tmp"
    trap -  EXIT HUP INT QUIT PIPE ALRM TERM
    exit $1
}

error_exit() {
    ${2+:} false && echo "${0##*/}: $2" 1>&2
    exit $1
}

print_and_exec () {
    PS4=$( (set -x; :) 2>&1 | sed 's/:$//')
    echo "${PS4}${*}" 1>&2
    "${@}"
}


######################################################################
# Argument Parsing
######################################################################

EDITOR="${EDITOR:-vi}"

while :; do
    case "${1:-}" in
        -e)        case $# in 1) error_exit 1 'Invalid -e option';; esac
                   ext=$2
                   shift 2
                   ;;
        -f)        case $# in 1) error_exit 1 'Invalid -f option';; esac
                   fname=$2
                   shift 2
                   ;;
        -o)        output=$1
                   shift
                   ;;
        --help|-h) print_usage_and_exit
                   ;;
        --)        shift
                   break
                   ;;
        -)         break
                   ;;
        --*|-*)    error_exit 1 'Invalid option'
                   ;;
        *)         break
                   ;;
    esac
done

for arg in "$@"; do
    case "${arg}" in
        -?*) error_exit 1 "not supported argument: ${arg}"
    esac
done


######################################################################
# Main
######################################################################

if [ $# -eq 0 ]; then
    print_and_exec "${EDITOR}"
    exit
fi

# 標準入力から読み込み
for arg in "$@"; do
    if [ "${arg}" = "-" ]; then
        read_from_stdin=1
        break
    fi
done
if [ -n "${read_from_stdin:-}" ]; then
    trap 'exit_trap' EXIT HUP INT QUIT PIPE ALRM TERM
    Tmp=$(mktemp -d -t "${0##*/}.$$.XXXXXXXXXXX") || error_exit 1 'Failed to mktemp'
    if ! [ -z ${fname+_} ]; then
        target_file="${Tmp}/${fname}"
    else
        target_file="${Tmp}/tmp_${0##*/}"
    fi
    if ! [ -z ${ext+_} ]; then
        target_file="${target_file}.${ext}"
    fi
    cat > "${target_file}"
fi

# $EDITOR で開く
for arg in "$@"; do
    file="${arg}"
    if [ "${file}" = '-' ]; then
        file="${target_file}"
    fi
    print_and_exec "${EDITOR}" "${file}" </dev/tty 1>&2
done

if ! [ -z ${output+_} ]; then
    for arg in "$@"; do
        if [ "${arg}" = '-' ]; then
            cat "${target_file}"
            continue
        fi
        cat "${arg}" 2>/dev/null
    done
fi
